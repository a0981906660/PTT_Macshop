robust(reg_LPM)
library(robustbase)
library(tidyverse)
library(sandwich)
library(lmtest)
library(modelr)
library(broom)
reg_LPM %>%
vcovHC() %>%
diag() %>%
sqrt()
coeftest(reg_LPM, vcov = vcovHC(reg_LPM))
coeftest(reg_LPM, vcov = vcovHC(reg_LPM, type = "HC0"))
View(Posts)
library(rvest)
library(httr)
library(tidyverse)
library(stringr)
library(readr)
library(dplyr)
library(sjmisc) #dummies
#robust s.e.
#https://www.brodrigues.co/blog/2018-07-08-rob_stderr/
library(robustbase)
library(tidyverse)
library(sandwich)
library(lmtest)
library(modelr)
library(broom)
options(stringsAsFactors = F)
library(broom)
#library(broom)
options(stringsAsFactors = F)
httr::set_config(httr::config(http_version = 0))
# environment
getwd()
wd_path <- "/Users/Andy 1/Google 雲端硬碟 (r08323004@g.ntu.edu.tw)/0 Semesters/109-1/一234 資料科學/0_Final_Project/PTT_Macshop"
setwd(wd_path)
load("1_data_scraping/collected_datasets/DS_Posts_iphone_2020-12-24_.rda")
setwd(wd_path)
load("1_data_scraping/collected_datasets/DS_Posts_iphone_2020-12-24_.rda")
load("/Users/Andy 1/Google 雲端硬碟 (r08323004@g.ntu.edu.tw)/0 Semesters/109-1/一234 資料科學/0_Final_Project/PTT_Macshop/1_data_scraping/collected_datasets/DS_Posts_iphone_2020-12-24_.rda")
# environment
load("/Users/Andy 1/Google 雲端硬碟 (r08323004@g.ntu.edu.tw)/0 Semesters/109-1/一234 資料科學/0_Final_Project/PTT_Macshop/1_data_scraping/collected_datasets/DS_Posts_iphone_2020-12-24_.rda")
# all iphone prices
tidy_df <- Posts %>%
mutate(IsSell = ifelse(str_detect(ptitle, "\\[販售\\]|\\[賣|出售|販售|售") |
str_detect(string = pcontent, pattern = "售價"), 1, 0),
IsBuy = ifelse(str_detect(ptitle, "\\[收購\\]|\\[買") |
str_detect(string = pcontent, pattern = "我想要買"), 1, 0),
IsChange = ifelse(str_detect(ptitle, "\\[交換\\]|\\[換"), 1, 0))%>%
mutate(IsSold = ifelse(str_detect(string = ptitle, pattern = "售出|已售出|已售|已出售"), 1, 0),
IsBought = ifelse(str_detect(string = ptitle, pattern = "徵到|徵得|已徵得|已徵到|收到|已購買|已購入"), 1, 0)) %>%
filter(!(IsBuy==0 & IsSell ==0 & IsChange ==0 & IsSold==0 & IsBought==0))
#extract prices
tidy_df <- tidy_df %>%
mutate(price_text = str_extract(pcontent, "價.{1,12}(\\d{2,5}){1,2}|價格.{1,8}(\\d{2,5}){1,2}")) %>%
mutate(price_text = gsub(",", "", price_text)) %>%
mutate(price = str_extract_all(price_text, "\\d{3,4}0")) %>%
filter(lengths(price)<=2) %>%
drop_na() %>%
unnest(price) %>%
mutate(price = as.numeric(price)) %>%
group_by(url) %>%
mutate(avg_price = mean(price)) %>%
ungroup() %>%
filter(!duplicated(url)) %>%
select(-price,-price_text)
#extract prices
tidy_df <- tidy_df %>%
mutate(price_text = str_extract(pcontent, "價.{1,12}(\\d{2,5}){1,2}|價格.{1,8}(\\d{2,5}){1,2}")) %>%
mutate(price_text = gsub(",", "", price_text)) %>%
mutate(price = str_extract_all(price_text, "\\d{3,4}0")) %>%
filter(lengths(price)<=2) %>%
drop_na() %>%
unnest(price) %>%
mutate(price = as.numeric(price)) %>%
group_by(url) %>%
mutate(avg_price = mean(price)) %>%
ungroup() %>%
filter(!duplicated(url)) %>%
select(-price,-price_text)
color_pattern <- regex("銀|金|灰|玫瑰|白|綠|紅|藍|石墨")
color_pattern <- regex("銀|金|灰|玫瑰|白|綠|紅|藍|石墨")
tidy_df <- tidy_df %>%
drop_na() %>%
# ROM
mutate(ROM_text = str_extract(pcontent, "[1-2]\\d{2}G|[1-2]\\d{2}g|\\d{2}G|\\d{2}g")) %>%
mutate(ROM = str_extract(ROM_text, "\\d{2,3}")) %>%
mutate(ROM = as.numeric(ROM)) %>%
select(-ROM_text) %>%
# Color
mutate(color_c = str_extract(pcontent, color_pattern)) %>%
mutate(color_t = str_extract(ptitle, color_pattern)) %>%
mutate(color = ifelse(!is.na(color_c), color_c, color_t)) %>%
select(-color_t, -color_c) %>%
mutate(color = ifelse(!is.na(color), color, "No_Color")) %>%
# Usage
mutate(ptime = parse_datetime(ptime, format = "%a %b %d %H:%M:%S %Y")) %>%
#mutate(ptime = as.POSIXct(ptime)) %>%
#mutate(referenceTime = as.POSIXct(parse_datetime("2015-09-25", "%Y-%m-%d"))) %>%
#mutate(TimeUsed = as.numeric(difftime(ptime-referenceTime, units='days'))/365) %>%
#filter(TimeUsed>=0) %>%
mutate(TimeUsed = as.numeric(ptime)) %>%
# Gender
mutate(IsFemale = ifelse(str_detect(string = pcontent, pattern = "女用機|女用|女生用"), 1, 0))%>%
mutate(IsMale = ifelse(str_detect(string = pcontent, pattern = "男用機|男用|男生用"), 1, 0))
# get dummies
tidy_df <- tidy_df %>%
to_dummy(color, suffix = "label") %>%
bind_cols(tidy_df) %>%
select(everything())
# Conditional on iPhone 6s
#型號、RAM/ROM容量、color、發文時間（作為使用幾年的依據）
type_pattern <- regex("plus|\\+", ignore_case=TRUE)
iphone6s_df <- tidy_df %>%
filter(str_detect(string = ptitle, pattern = "6s")) %>%
# Type
mutate(Is_6s_plus = (ifelse(str_detect(ptitle, type_pattern), 1, 0))) %>%
# ROM
mutate(TimeUsed = as.numeric(ptime-parse_datetime("2015-09-25", "%Y-%m-%d"))/24) %>%
filter(TimeUsed>=0)
tidy_df %>%
filter(str_detect(string = pcontent, pattern = "女用機")) %>%
nrow
tidy_df %>%
filter(str_detect(string = pcontent, pattern = "男用機")) %>%
nrow
tidy_df %>%
filter(str_detect(string = pcontent, pattern = "女用機|女用|女生用")) %>%
nrow
tidy_df %>%
filter(str_detect(string = pcontent, pattern = "男用機|男用|男生用")) %>%
nrow
tidy_df %>%
filter(IsFemale==1) %>%
nrow
tidy_df %>%
filter(IsMale==1) %>%
nrow
View(tidy_df)
# Gender Rent
gender_df <- tidy_df %>%
filter(IsMale==1 | IsFemale==1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_白 + color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_石墨 + color_銀,
data = gender_df)
summary(reg1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_白 + color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_石墨 + color_銀,
data = tidy_df)
summary(reg1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_白 + color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_石墨 + color_銀,
data = gender_df)
summary(reg1)
# Gender Rent
gender_df <- tidy_df %>%
filter(IsMale==1 | IsFemale==1) %>%
filter(IsBought==1 | IsSold==1)
# Gender Rent
gender_df <- tidy_df %>%
#filter(IsMale==1 | IsFemale==1) %>%
filter(IsBought==1 | IsSold==1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_白 + color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_石墨 + color_銀,
data = gender_df)
summary(reg1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_白 + color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_石墨 + color_銀,
data = tidy_df)
summary(reg1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1))
gender_df <- iphone6s_df %>%
#filter(IsMale==1 | IsFemale==1) %>%
filter(IsBought==1 | IsSold==1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
# Gender Rent
gender_df <- tidy_df %>%
filter(IsBought==1 | IsSold==1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1))
# Gender Rent
gender_df <- tidy_df %>%
filter(IsBought==1 | IsSold==1)
reg1 <- lm(formula = avg_price ~ IsFemale + IsMale + TimeUsed + ROM +
color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1))
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1))
coeftest(reg1, vcov = vcovHC(reg1, type = "HC0"))
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1, type = "HC0"))
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1, type = "HC3"))
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1, type = "HC3"))
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1, type = "HC4"))
coeftest(reg1, vcov = vcovHC(reg1, type = "HC5"))
coeftest(reg1, vcov = vcovHC(reg1, type = "HC3"))
gender_df <- iphone6s_df %>%
filter(IsBought==1 | IsSold==1)
reg1 <- lm(formula = avg_price ~ IsFemale + TimeUsed + ROM +
color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1, type = "HC3"))
reg1 <- lm(formula = avg_price ~ IsFemale + IsMale + TimeUsed + ROM +
color_紅 + color_灰 + color_金 + color_藍 + color_綠 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
reg1 <- lm(formula = avg_price ~ IsFemale + IsMale + TimeUsed + ROM +
color_灰 + color_金 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1, type = "HC3"))
reg1 <- lm(formula = avg_price ~ IsFemale + IsMale + TimeUsed + ROM +
color_灰 + color_金 + color_玫瑰 + color_銀,
data = gender_df)
summary(reg1)
coeftest(reg1, vcov = vcovHC(reg1, type = "HC3"))
# iphone 6s : 15873 obs
# supply
i6s_WTBP_df <- iphone6s_df %>%
filter(IsSell == 1) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus) %>%
filter(!duplicated(week, ROM))
reg3 <- lm(formula = price ~ quantity + TimeUsed + ROM + Is_6s_plus,
data = i6s_WTBP_df)
summary(reg3)
coeftest(reg3, vcov = vcovHC(reg3, type = "HC3"))
# iphone 6s : 15873 obs
# supply
i6s_WTBP_df <- iphone6s_df %>%
filter(IsSell == 1) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus) %>%
filter(!duplicated(week, ROM))
reg3 <- lm(formula = price ~ quantity + TimeUsed + ROM + Is_6s_plus,
data = i6s_WTBP_df)
summary(reg3)
coeftest(reg3, vcov = vcovHC(reg3, type = "HC3"))
# demand
i6s_WTP_df <- iphone6s_df %>%
filter(IsBuy == 1) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus) %>%
filter(!duplicated(week, ROM))
reg4 <- lm(formula = price ~ quantity + TimeUsed + ROM + Is_6s_plus,
data = i6s_WTP_df)
summary(reg4)
coeftest(reg4, vcov = vcovHC(reg4, type = "HC3"))
iphone6s_df %>%
filter(IsBought == 1 | IsSold == 1) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus) %>%
filter(!duplicated(week, ROM)) %>%
ggplot(aes(week, price)) +
geom_line()
#library(broom)
library("ivreg")
# 晶片門
chip_pattern <- regex("A9晶片|台積電|三星|TSMC|samsung",ignore_case=TRUE)
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) %>%
filter(!duplicated(week, ROM))
View(i6s_IV_df)
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM, IsTSMC, IsSamsung) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) %>%
filter(!duplicated(week, ROM, IsTSMC, IsSamsung))
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM, IsTSMC, IsSamsung) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) #%>%
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM, IsTSMC, IsSamsung) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) %>%
filter(!duplicated(week, ROM, IsTSMC, IsSamsung))
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM, IsTSMC, IsSamsung) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) %>%
drop_na() %>%
filter(!duplicated(week, ROM, IsTSMC, IsSamsung))
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM, IsTSMC, IsSamsung) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) %>%
#drop_na() %>%
filter(!duplicated(week, ROM, IsTSMC))
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM, IsTSMC, IsSamsung) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) %>%
#drop_na() %>%
filter(!duplicated(week, ROM))
### IV reg
# demand function
m_iv <- ivreg(quantity ~ price + TimeUsed + ROM + Is_6s_plus |
IsTSMC + IsSamsung + TimeUsed + ROM + Is_6s_plus,
data = i6s_IV_df)
summary(m_iv)
# 晶片門
chip_pattern <- regex("A9晶片|台積電|三星|TSMC|samsung",ignore_case=TRUE)
i6s_IV_df <- iphone6s_df %>%
#filter(IsBought==1 | IsSold==1) %>%
mutate(IsTSMC = ifelse(str_detect(pcontent, pattern = regex("台積電|TSMC",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsSamsung = ifelse(str_detect(pcontent, pattern = regex("三星|samsung",ignore_case=TRUE)), 1, 0)) %>%
mutate(IsChipGate = ifelse(str_detect(pcontent, pattern = chip_pattern), 1, 0)) %>%
mutate(week = as.Date(cut(ptime, "week"))) %>%
group_by(week, ROM) %>%
mutate(quantity = n()) %>%
ungroup() %>%
group_by(week) %>%
summarise(price = mean(avg_price),
quantity = quantity,
ROM = ROM,
TimeUsed = mean(TimeUsed),
Is_6s_plus = Is_6s_plus,
IsTSMC = IsTSMC,
IsSamsung = IsSamsung,
IsChipGate = IsChipGate) %>%
#drop_na() %>%
filter(!duplicated(week, ROM))
### IV reg
# demand function
m_iv <- ivreg(quantity ~ price + TimeUsed + ROM + Is_6s_plus |
IsTSMC + IsSamsung + TimeUsed + ROM + Is_6s_plus,
data = i6s_IV_df)
summary(m_iv)
coeftest(m_iv, vcov = vcovHC(m_iv, type = "HC3"))
summary(m_iv)
coeftest(m_iv, vcov = vcovHC(m_iv, type = "HC3"))
reg_LPM <- lm(IsSold ~ avg_price + ROM + Is_6s_plus+TimeUsed+IsFemale+
color_灰+color_金+color_玫瑰+color_銀,
data=iphone6s_df %>% filter(IsSell==1))
summary(reg_LPM)
coeftest(reg_LPM, vcov = vcovHC(reg_LPM, type = "HC3"))
reg_probit <- glm(IsSold ~ avg_price + ROM + Is_6s_plus+TimeUsed+IsFemale+
color_灰+color_金+color_玫瑰+color_銀,
data=iphone6s_df, family=binomial(probit))
summary(reg_probit)
coeftest(reg_probit, vcov = vcovHC(reg_probit, type = "HC3"))
reg_logit <- glm(IsSold ~ avg_price + ROM + Is_6s_plus+TimeUsed+IsFemale+
color_灰+color_金+color_玫瑰+color_銀,
data=iphone6s_df, family=binomial(logit))
summary(reg_logit)
coeftest(reg_logit, vcov = vcovHC(reg_logit, type = "HC3"))
reg_probit <- glm(IsSold ~ avg_price + ROM + Is_6s_plus+TimeUsed+IsFemale+
color_灰+color_金+color_玫瑰+color_銀,
data=iphone6s_df %>% filter(IsSell==1), family=binomial(probit))
summary(reg_probit)
coeftest(reg_probit, vcov = vcovHC(reg_probit, type = "HC3"))
reg_logit <- glm(IsSold ~ avg_price + ROM + Is_6s_plus+TimeUsed+IsFemale+
color_灰+color_金+color_玫瑰+color_銀,
data=iphone6s_df %>% filter(IsSell==1), family=binomial(logit))
summary(reg_logit)
coeftest(reg_logit, vcov = vcovHC(reg_logit, type = "HC3"))
